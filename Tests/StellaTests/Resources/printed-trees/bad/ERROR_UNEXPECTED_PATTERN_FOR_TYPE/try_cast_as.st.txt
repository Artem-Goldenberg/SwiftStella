▿ Stella.Program
  - languageDeclaration: Stella.LanguageDeclaration.languageCore
  ▿ extensions: 1 element
    ▿ Stella.LanguageExtension
      ▿ names: 3 elements
        ▿ Stella.LanguageExtension.Name
          - value: "try-cast-as"
        ▿ Stella.LanguageExtension.Name
          - value: "structural-patterns"
        ▿ Stella.LanguageExtension.Name
          - value: "natural-literals"
  ▿ declarations: 1 element
    ▿ Stella.Declaration.function
      ▿ function: (7 elements)
        - annotations: 0 elements
        ▿ name: Stella.Identifier
          - value: "main"
        ▿ parameters: 1 element
          ▿ Stella.Declaration.Parameter
            ▿ name: Stella.Identifier
              - value: "n"
            - type: Stella.Type.nat
        ▿ returnType: Optional(Stella.Type.nat)
          - some: Stella.Type.nat
        - throwTypes: 0 elements
        - body: 0 elements
        ▿ return: Stella.Expression.tryCastAs
          ▿ tryCastAs: (5 elements)
            - .0: Stella.Expression.constTrue
            - .1: Stella.Type.nat
            - .2: Stella.Pattern.true
            ▿ .3: Stella.Expression.constInt
              - constInt: 12
            ▿ with: Stella.Expression.constInt
              - constInt: 0
