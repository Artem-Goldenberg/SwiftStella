▿ Stella.Program
  - languageDeclaration: Stella.LanguageDeclaration.languageCore
  ▿ extensions: 1 element
    ▿ Stella.LanguageExtension
      ▿ names: 3 elements
        ▿ Stella.LanguageExtension.Name
          - value: "sum-types"
        ▿ Stella.LanguageExtension.Name
          - value: "unit-type"
        ▿ Stella.LanguageExtension.Name
          - value: "variants"
  ▿ declarations: 1 element
    ▿ Stella.Declaration.function
      ▿ function: (7 elements)
        - annotations: 0 elements
        ▿ name: Stella.Identifier
          - value: "main"
        ▿ parameters: 1 element
          ▿ Stella.Declaration.Parameter
            ▿ name: Stella.Identifier
              - value: "input"
            - type: Stella.Type.bool
        ▿ returnType: Optional(Stella.Type.nat)
          - some: Stella.Type.nat
        - throwTypes: 0 elements
        - body: 0 elements
        ▿ return: Stella.Expression.match
          ▿ match: (2 elements)
            ▿ .0: Stella.Expression.var
              ▿ var: Stella.Identifier
                - value: "input"
            ▿ .1: 1 element
              ▿ (2 elements)
                ▿ .0: Stella.Pattern.variant
                  ▿ variant: (2 elements)
                    ▿ .0: Stella.Identifier
                      - value: "failure"
                    ▿ .1: Optional(Stella.Pattern.var(Stella.Identifier(value: "f")))
                      ▿ some: Stella.Pattern.var
                        ▿ var: Stella.Identifier
                          - value: "f"
                ▿ .1: Stella.Expression.var
                  ▿ var: Stella.Identifier
                    - value: "n"
