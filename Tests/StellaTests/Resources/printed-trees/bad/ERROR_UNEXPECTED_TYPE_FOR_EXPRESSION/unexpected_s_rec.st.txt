▿ Stella.Program
  - languageDeclaration: Stella.LanguageDeclaration.languageCore
  - extensions: 0 elements
  ▿ declarations: 1 element
    ▿ Stella.Declaration.function
      ▿ function: (7 elements)
        - annotations: 0 elements
        ▿ name: Stella.Identifier
          - value: "main"
        ▿ parameters: 1 element
          ▿ Stella.Declaration.Parameter
            ▿ name: Stella.Identifier
              - value: "n"
            - type: Stella.Type.nat
        ▿ returnType: Optional(Stella.Type.nat)
          - some: Stella.Type.nat
        - throwTypes: 0 elements
        - body: 0 elements
        ▿ return: Stella.Expression.natRec
          ▿ natRec: (3 elements)
            ▿ .0: Stella.Expression.var
              ▿ var: Stella.Identifier
                - value: "n"
            ▿ .1: Stella.Expression.succ
              ▿ succ: Stella.Expression.constInt
                - constInt: 0
            ▿ .2: Stella.Expression.abstraction
              ▿ abstraction: (2 elements)
                ▿ .0: 1 element
                  ▿ Stella.Declaration.Parameter
                    ▿ name: Stella.Identifier
                      - value: "i"
                    - type: Stella.Type.nat
                ▿ .1: Stella.Expression.abstraction
                  ▿ abstraction: (2 elements)
                    ▿ .0: 1 element
                      ▿ Stella.Declaration.Parameter
                        ▿ name: Stella.Identifier
                          - value: "r"
                        - type: Stella.Type.nat
                    - .1: Stella.Expression.constTrue
