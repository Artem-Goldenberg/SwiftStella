▿ Stella.Program
  - languageDeclaration: Stella.LanguageDeclaration.languageCore
  - extensions: 0 elements
  ▿ declarations: 1 element
    ▿ Stella.Declaration.function
      ▿ function: (7 elements)
        - annotations: 0 elements
        ▿ name: Stella.Identifier
          - value: "main"
        ▿ parameters: 1 element
          ▿ Stella.Declaration.Parameter
            ▿ name: Stella.Identifier
              - value: "x"
            - type: Stella.Type.bool
        ▿ returnType: Optional(Stella.Type.function(from: [Stella.Type.nat], to: Stella.Type.nat))
          ▿ some: Stella.Type.function
            ▿ function: (2 elements)
              ▿ from: 1 element
                - Stella.Type.nat
              - to: Stella.Type.nat
        - throwTypes: 0 elements
        - body: 0 elements
        ▿ return: Stella.Expression.if
          ▿ if: (3 elements)
            ▿ condition: Stella.Expression.var
              ▿ var: Stella.Identifier
                - value: "x"
            ▿ then: Stella.Expression.succ
              ▿ succ: Stella.Expression.constInt
                - constInt: 0
            ▿ else: Stella.Expression.constInt
              - constInt: 0
