▿ Stella.Program
  - languageDeclaration: Stella.LanguageDeclaration.languageCore
  ▿ extensions: 1 element
    ▿ Stella.LanguageExtension
      ▿ names: 1 element
        ▿ Stella.LanguageExtension.Name
          - value: "universal-types"
  ▿ declarations: 2 elements
    ▿ Stella.Declaration.genericFunction
      ▿ genericFunction: (8 elements)
        - annotations: 0 elements
        ▿ name: Stella.Identifier
          - value: "identity"
        ▿ typeVariables: 1 element
          ▿ Stella.Identifier
            - value: "T"
        ▿ parameters: 1 element
          ▿ Stella.Declaration.Parameter
            ▿ name: Stella.Identifier
              - value: "x"
            ▿ type: Stella.Type.variable
              ▿ variable: Stella.Identifier
                - value: "T"
        ▿ returnType: Optional(Stella.Type.variable(Stella.Identifier(value: "T")))
          ▿ some: Stella.Type.variable
            ▿ variable: Stella.Identifier
              - value: "T"
        - throwTypes: 0 elements
        - body: 0 elements
        ▿ return: Stella.Expression.var
          ▿ var: Stella.Identifier
            - value: "x"
    ▿ Stella.Declaration.function
      ▿ function: (7 elements)
        - annotations: 0 elements
        ▿ name: Stella.Identifier
          - value: "main"
        ▿ parameters: 1 element
          ▿ Stella.Declaration.Parameter
            ▿ name: Stella.Identifier
              - value: "x"
            - type: Stella.Type.nat
        ▿ returnType: Optional(Stella.Type.nat)
          - some: Stella.Type.nat
        - throwTypes: 0 elements
        - body: 0 elements
        ▿ return: Stella.Expression.application
          ▿ application: (2 elements)
            ▿ .0: Stella.Expression.typeApplication
              ▿ typeApplication: (2 elements)
                ▿ .0: Stella.Expression.var
                  ▿ var: Stella.Identifier
                    - value: "identity"
                ▿ .1: 1 element
                  - Stella.Type.nat
            ▿ .1: 1 element
              ▿ Stella.Expression.var
                ▿ var: Stella.Identifier
                  - value: "x"
