▿ Stella.Program
  - languageDeclaration: Stella.LanguageDeclaration.languageCore
  ▿ extensions: 1 element
    ▿ Stella.LanguageExtension
      ▿ names: 1 element
        ▿ Stella.LanguageExtension.Name
          - value: "universal-types"
  ▿ declarations: 2 elements
    ▿ Stella.Declaration.genericFunction
      ▿ genericFunction: (8 elements)
        - annotations: 0 elements
        ▿ name: Stella.Identifier
          - value: "self_app"
        ▿ typeVariables: 1 element
          ▿ Stella.Identifier
            - value: "X"
        ▿ parameters: 1 element
          ▿ Stella.Declaration.Parameter
            ▿ name: Stella.Identifier
              - value: "f"
            ▿ type: Stella.Type.forall
              ▿ forall: (2 elements)
                ▿ variables: 1 element
                  ▿ Stella.Identifier
                    - value: "X"
                ▿ type: Stella.Type.function
                  ▿ function: (2 elements)
                    ▿ from: 1 element
                      ▿ Stella.Type.variable
                        ▿ variable: Stella.Identifier
                          - value: "X"
                    ▿ to: Stella.Type.variable
                      ▿ variable: Stella.Identifier
                        - value: "X"
        ▿ returnType: Optional(Stella.Type.forall(variables: [Stella.Identifier(value: "X")], type: Stella.Type.function(from: [Stella.Type.variable(Stella.Identifier(value: "X"))], to: Stella.Type.variable(Stella.Identifier(value: "X")))))
          ▿ some: Stella.Type.forall
            ▿ forall: (2 elements)
              ▿ variables: 1 element
                ▿ Stella.Identifier
                  - value: "X"
              ▿ type: Stella.Type.function
                ▿ function: (2 elements)
                  ▿ from: 1 element
                    ▿ Stella.Type.variable
                      ▿ variable: Stella.Identifier
                        - value: "X"
                  ▿ to: Stella.Type.variable
                    ▿ variable: Stella.Identifier
                      - value: "X"
        - throwTypes: 0 elements
        - body: 0 elements
        ▿ return: Stella.Expression.application
          ▿ application: (2 elements)
            ▿ .0: Stella.Expression.typeApplication
              ▿ typeApplication: (2 elements)
                ▿ .0: Stella.Expression.var
                  ▿ var: Stella.Identifier
                    - value: "f"
                ▿ .1: 1 element
                  ▿ Stella.Type.forall
                    ▿ forall: (2 elements)
                      ▿ variables: 1 element
                        ▿ Stella.Identifier
                          - value: "X"
                      ▿ type: Stella.Type.function
                        ▿ function: (2 elements)
                          ▿ from: 1 element
                            ▿ Stella.Type.variable
                              ▿ variable: Stella.Identifier
                                - value: "X"
                          ▿ to: Stella.Type.variable
                            ▿ variable: Stella.Identifier
                              - value: "X"
            ▿ .1: 1 element
              ▿ Stella.Expression.var
                ▿ var: Stella.Identifier
                  - value: "f"
    ▿ Stella.Declaration.function
      ▿ function: (7 elements)
        - annotations: 0 elements
        ▿ name: Stella.Identifier
          - value: "main"
        ▿ parameters: 1 element
          ▿ Stella.Declaration.Parameter
            ▿ name: Stella.Identifier
              - value: "x"
            - type: Stella.Type.nat
        ▿ returnType: Optional(Stella.Type.nat)
          - some: Stella.Type.nat
        - throwTypes: 0 elements
        - body: 0 elements
        ▿ return: Stella.Expression.constInt
          - constInt: 0
